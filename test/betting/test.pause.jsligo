
#import "../../src/contracts/jsligo/betting/main.jsligo" "Betting"
#import "helpers/bootstrap.jsligo" "Bootstrap"
#import "helpers/helper.jsligo" "Helper"
#import "helpers/assert.jsligo" "Assert"
#import "../common/log.jsligo" "Log"

const _ = Log.describe("[Betting - SwitchPause] test suite")


const _test_success_switch_pause_by_manager = () => {
    let [_betting_address, betting_contract, betting_taddress, elon, _jeff, _a, _b, _j] = Bootstrap.bootstrap();
    Assert.is_betting_paused(betting_taddress, false);

    Helper.trsc_switch_pauseBetting_success (betting_contract, elon);
    Assert.is_betting_paused(betting_taddress, true);

    Helper.trsc_switch_pauseBetting_success (betting_contract, elon);
    Assert.is_betting_paused(betting_taddress, false);
    return "OK"
};

const _test_failure_switch_pause_unauthorized = () => {
    let [_betting_address, betting_contract, betting_taddress, _elon, jeff, _a, _b, _j] = Bootstrap.bootstrap();
    Assert.is_betting_paused(betting_taddress, false);

    let result = Helper.trsc_switch_pauseBetting (betting_contract, jeff);
    Assert.string_failure(result, Betting.Errors.not_manager);
    Assert.is_betting_paused(betting_taddress, false);
    return "OK"
};

const _test_switch_pause_event_creation = () => {
    let [_betting_address, betting_contract, betting_taddress, elon, jeff, _a, _b, _j] = Bootstrap.bootstrap();
    Assert.is_betting_paused(betting_taddress, false);

    Helper.trsc_switch_pauseEventCreation_success (betting_contract, elon);
    Assert.is_event_creation_paused(betting_taddress, true);

    Helper.trsc_switch_pauseEventCreation_success (betting_contract, elon);
    Assert.is_event_creation_paused(betting_taddress, false);

    let ret = Helper.trsc_switch_pauseEventCreation (betting_contract, jeff);
    Assert.string_failure(ret, Betting.Errors.not_manager);
    Assert.is_event_creation_paused(betting_taddress, false);
    return "OK"
};

const test_success_switch_pause_by_manager = _test_success_switch_pause_by_manager();
const test_failure_switch_pause_unauthorized = _test_failure_switch_pause_unauthorized();
const test_switch_pause_event_creation = _test_switch_pause_event_creation();