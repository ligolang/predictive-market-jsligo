#import "../../../src/contracts/jsligo/oracle/types.jsligo" "Types"
#import "../../../src/contracts/jsligo/oracle/main.jsligo" "Oracle"
#import "../../../src/contracts/jsligo/oracle/callback/main.jsligo" "Callback"
#import "callback.jsligo" "Helper_Callback"

const plain_timestamp : timestamp = ("1970-01-01T00:00:01Z" as timestamp);

export const primary_event : Types.event_type =
    {
        name : "First Event",
        videogame : "Videogame ONE",
        beginAt : plain_timestamp,
        endAt : plain_timestamp + 4096,
        modifiedAt : plain_timestamp,
        opponents : {teamOne : "Team ONE", teamTwo : "Team TWO"},
        gameStatus : Ongoing()
    };

export const secondary_event : Types.event_type =
    {
        name : "Secondary Event",
        videogame : "Videogame TWO",
        beginAt : plain_timestamp,
        endAt : plain_timestamp + 4096,
        modifiedAt : plain_timestamp,
        opponents : {teamOne : "Team THREE", teamTwo : "Team FOUR"},
        gameStatus : Ongoing()
    };

export const bootstrap_oracle = () => {
    // Boostrapping accounts
    Test.reset_state(6 as nat, (list([]) as list<tez>));
    let _baker: address = Test.nth_bootstrap_account(0);
    let elon: address = Test.nth_bootstrap_account(1);
    let jeff: address = Test.nth_bootstrap_account(2);
    let alice: address = Test.nth_bootstrap_account(3);
    let bob: address = Test.nth_bootstrap_account(4);
    let james: address = Test.nth_bootstrap_account(5);

    // Boostrapping storage
    let init_storage = {
        isPaused : false,
        manager : elon,
        signer : jeff,
        events : (Map.empty as map<nat, Types.event_type>),
        eventsIndex : 0 as nat,
        meta : (Map.empty as map<string, bytes>)
    };

    // Boostrapping Oracle contract
    let oracle_path = "../../../src/contracts/jsligo/oracle/main.jsligo";
    let iBis = Test.run( (x : Types.storage) => x, init_storage);
    let [oracle_address, _c, _n] = Test.originate_from_file(oracle_path, iBis, 0 as mutez);
    let oracle_taddress = (Test.cast_address(oracle_address) as typed_address<parameter_of Oracle,Types.storage>);
    let oracle_contract = Test.to_contract(oracle_taddress);

    return [oracle_contract, oracle_taddress, elon, jeff, alice, bob, james]
};

export const bootstrap_oracle_callback = () => {
    let oracle_callback = Helper_Callback.originate_from_file(Helper_Callback.base_storage);
    return oracle_callback
};
