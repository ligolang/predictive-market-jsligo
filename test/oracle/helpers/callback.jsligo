#import "../../../src/contracts/jsligo/oracle/callback/main.jsligo" "Callback"

// Some types for readability
type taddr = typed_address<parameter_of Callback, Callback.storage>;
type contr = contract<parameter_of Callback>;
type originated = {
    addr: address,
    taddr: taddr,
    contr: contr,
}

const plain_timestamp : timestamp = ("1970-01-01T00:00:01Z" as timestamp);

type gameStatus = ["Ongoing"] | ["Team1Win"] | ["Team2Win"] | ["Draw"];

// Base Callback storage
export const base_storage : Callback.storage = {
    name : "",
    videogame : "",
    beginAt : plain_timestamp + 2000,
    endAt : plain_timestamp + 4000,
    modifiedAt : plain_timestamp,
    opponents : { teamOne : "", teamTwo : ""},
    gameStatus : Ongoing(),
    meta : (Map.empty as map<string, bytes>)
}

export const originate_from_file = (initial_storage : Callback.storage) : originated => {
    const oracle_path = "../../../src/contracts/jsligo/oracle/callback/main.jsligo";
    const orig = Test.originate_from_file(oracle_path, initial_storage, 0 as mutez);
    return {
        contr : Test.to_contract(orig.addr),
        taddr : orig.addr,
        addr : Test.to_address(orig.addr),
    }
};
