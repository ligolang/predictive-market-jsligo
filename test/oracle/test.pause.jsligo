#import "../../src/contracts/jsligo/oracle/errors.jsligo" "Errors"
#import "helpers/bootstrap.jsligo" "Bootstrap"
#import "helpers/helper.jsligo" "Helper"
#import "helpers/assert.jsligo" "Assert"
#import "../common/log.jsligo" "Log"

const _ = Log.describe("[Oracle - SwitchPause] test suite")

const _test_switch_pause_from_manager_should_work = () => {
    let [oracle_contract, oracle_taddress, elon, _je, _a, _b, _j] = Bootstrap.bootstrap_oracle();
    Assert.ispaused(oracle_taddress, false);

    Helper.trsc_switch_pause_success (oracle_contract, elon);
    Assert.ispaused(oracle_taddress, true);
    return "OK"
};

const _test_switch_pause_from_signer_should_not_work = () => {
    let [oracle_contract, oracle_taddress, _e, jeff, _a, _b, _j] = Bootstrap.bootstrap_oracle();
    Assert.ispaused(oracle_taddress, false);

    let ret = Helper.trsc_switch_pause (oracle_contract, jeff);
    Assert.string_failure(ret, Errors.not_manager);
    Assert.ispaused(oracle_taddress, false);
    return "OK"
};

const _test_switch_pause_from_unauthorized_address_should_not_work = () => {
    let [oracle_contract, oracle_taddress, _e, _je, alice, _b, _j] = Bootstrap.bootstrap_oracle();
    Assert.ispaused(oracle_taddress, false);

    let ret = Helper.trsc_switch_pause (oracle_contract, alice);
    Assert.string_failure(ret, Errors.not_manager);
    Assert.ispaused(oracle_taddress, false);
    return "OK"
};

const test_switch_pause_from_manager_should_work = _test_switch_pause_from_manager_should_work();
const test_switch_pause_from_signer_should_not_work = _test_switch_pause_from_signer_should_not_work();
const test_switch_pause_from_unauthorized_address_should_not_work = _test_switch_pause_from_unauthorized_address_should_not_work();